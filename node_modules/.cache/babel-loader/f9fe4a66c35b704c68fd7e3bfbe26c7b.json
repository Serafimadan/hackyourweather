{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/serafima/WWW/React/week3/project/src/components/CityInfoList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport SearchForm from './SearchingForm';\nimport CityWeatherInformation from './CityWeatherInformation';\n\nconst CityInfoList = () => {\n  _s();\n\n  let [city, setCity] = useState('');\n  let [weatherInfo, setWeatherInfo] = useState([]);\n  let [error, setError] = useState(false);\n  let [loading, setLoading] = useState(false);\n  const API_KEY = process.env.REACT_APP_OPENWEATHERMAP_API_KEY;\n\n  function getWeatherInfo() {\n    // clear state in preparation for new data\n    setError(false);\n    setWeatherInfo([]);\n    setLoading(true);\n    fetch(`https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${API_KEY}`).then(response => response.json()).then(response => {\n      if (response.cod !== 200) {\n        throw new Error();\n      }\n\n      setWeatherInfo(response);\n      setLoading(false);\n    }).catch(error => {\n      setError(true);\n      setLoading(false);\n      console.log(error.message);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Weather\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(SearchForm, {\n      getWeatherInfo: getWeatherInfo,\n      setCity: setCity,\n      city: city\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"weather-list\",\n      children: /*#__PURE__*/_jsxDEV(CityWeatherInformation, {\n        weatherInfo: weatherInfo,\n        error: error,\n        loading: loading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CityInfoList, \"IblBMfCneL3VC3JTmdSnyp0QBkA=\");\n\n_c = CityInfoList;\nexport default CityInfoList;\n\nvar _c;\n\n$RefreshReg$(_c, \"CityInfoList\");","map":{"version":3,"sources":["/Users/serafima/WWW/React/week3/project/src/components/CityInfoList.js"],"names":["React","useState","SearchForm","CityWeatherInformation","CityInfoList","city","setCity","weatherInfo","setWeatherInfo","error","setError","loading","setLoading","API_KEY","process","env","REACT_APP_OPENWEATHERMAP_API_KEY","getWeatherInfo","fetch","then","response","json","cod","Error","catch","console","log","message"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,UAAP,MAAuB,iBAAvB;AACA,OAAOC,sBAAP,MAAmC,0BAAnC;;AAEA,MAAMC,YAAY,GAAG,MAAM;AAAA;;AACvB,MAAI,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,EAAD,CAA9B;AACA,MAAI,CAACM,WAAD,EAAcC,cAAd,IAAgCP,QAAQ,CAAC,EAAD,CAA5C;AACA,MAAI,CAACQ,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,KAAD,CAAhC;AACA,MAAI,CAACU,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,CAAC,KAAD,CAApC;AAEA,QAAMY,OAAO,GAAGC,OAAO,CAACC,GAAR,CAAYC,gCAA5B;;AAEA,WAASC,cAAT,GAA0B;AAEtB;AACAP,IAAAA,QAAQ,CAAC,KAAD,CAAR;AACAF,IAAAA,cAAc,CAAC,EAAD,CAAd;AACAI,IAAAA,UAAU,CAAC,IAAD,CAAV;AACAM,IAAAA,KAAK,CAAE,qDAAoDb,IAAK,UAASQ,OAAQ,EAA5E,CAAL,CACCM,IADD,CACMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADlB,EAECF,IAFD,CAEMC,QAAQ,IAAI;AACd,UAAIA,QAAQ,CAACE,GAAT,KAAiB,GAArB,EAA0B;AACtB,cAAM,IAAIC,KAAJ,EAAN;AACH;;AACDf,MAAAA,cAAc,CAACY,QAAD,CAAd;AACAR,MAAAA,UAAU,CAAC,KAAD,CAAV;AACH,KARD,EASCY,KATD,CASOf,KAAK,IAAI;AACZC,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACAE,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAa,MAAAA,OAAO,CAACC,GAAR,CAAYjB,KAAK,CAACkB,OAAlB;AACH,KAbD;AAcH;;AAED,sBACI;AAAK,IAAA,SAAS,EAAG,WAAjB;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,UAAD;AAAY,MAAA,cAAc,EAAIV,cAA9B;AAA8C,MAAA,OAAO,EAAIX,OAAzD;AAAkE,MAAA,IAAI,EAAED;AAAxE;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAK,MAAA,SAAS,EAAG,cAAjB;AAAA,6BACI,QAAC,sBAAD;AACI,QAAA,WAAW,EAAEE,WADjB;AAEI,QAAA,KAAK,EAAEE,KAFX;AAGI,QAAA,OAAO,EAAEE;AAHb;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAaH,CA3CD;;GAAMP,Y;;KAAAA,Y;AA4CN,eAAeA,YAAf","sourcesContent":["import React, { useState } from 'react';\nimport SearchForm from './SearchingForm';\nimport CityWeatherInformation from './CityWeatherInformation';\n\nconst CityInfoList = () => {\n    let [city, setCity] = useState('');\n    let [weatherInfo, setWeatherInfo] = useState([]);\n    let [error, setError] = useState(false);\n    let [loading, setLoading] = useState(false);\n    \n    const API_KEY = process.env.REACT_APP_OPENWEATHERMAP_API_KEY;\n    \n    function getWeatherInfo() {\n       \n        // clear state in preparation for new data\n        setError(false);\n        setWeatherInfo([]);\n        setLoading(true);\n        fetch(`https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${API_KEY}`)\n        .then(response => response.json())\n        .then(response => {\n            if (response.cod !== 200) {\n                throw new Error()\n            }\n            setWeatherInfo(response);\n            setLoading(false);\n        })\n        .catch(error => {\n            setError(true);\n            setLoading(false);\n            console.log(error.message);\n        });\n    }\n    \n    return (\n        <div className = 'container'>\n            <h1>Weather</h1>\n            <SearchForm getWeatherInfo = {getWeatherInfo} setCity = {setCity} city={city}/>\n            <div className = 'weather-list'>\n                <CityWeatherInformation \n                    weatherInfo={weatherInfo}\n                    error={error}\n                    loading={loading}\n                />\n            </div>\n        </div>\n    )\n}\nexport default CityInfoList;\n    "]},"metadata":{},"sourceType":"module"}