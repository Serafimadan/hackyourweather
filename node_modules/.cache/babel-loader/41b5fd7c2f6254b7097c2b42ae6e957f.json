{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/serafima/WWW/React/week3/project/src/components/CityWeatherInformation.js\";\n\nconst CityWeatherInformation = props => {\n  function converterTemperature(valNum) {\n    let Celsius = valNum - 273.15;\n    return Math.round(Celsius);\n  }\n\n  const deleteCard = id => {\n    console.log(id);\n    setWeatherInfo(weatherInfo.filter(cityForecast => cityForecast.id !== id));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [props.error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"There is no such city in the world! Please enter a valid city.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 29\n    }, this), props.loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loadoing...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 31\n    }, this), props.weatherInfo.cod === 200 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"city-element\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => deleteCard(props.id),\n        children: \"X\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"information-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [props.weatherInfo.name, \", \", props.weatherInfo.sys.country]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"weather-inform\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"weather-name\",\n            children: props.weatherInfo.weather[0].main\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"weather-descript\",\n            children: props.weatherInfo.weather[0].description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"min temp: \", converterTemperature(props.weatherInfo.main.temp_min)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"max temp: \", converterTemperature(props.weatherInfo.main.temp_max)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Location: \", props.weatherInfo.coord.lat, \", \", props.weatherInfo.coord.lon]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 17\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 9\n  }, this);\n};\n\n_c = CityWeatherInformation;\nexport default CityWeatherInformation;\n\nvar _c;\n\n$RefreshReg$(_c, \"CityWeatherInformation\");","map":{"version":3,"sources":["/Users/serafima/WWW/React/week3/project/src/components/CityWeatherInformation.js"],"names":["CityWeatherInformation","props","converterTemperature","valNum","Celsius","Math","round","deleteCard","id","console","log","setWeatherInfo","weatherInfo","filter","cityForecast","error","loading","cod","name","sys","country","weather","main","description","temp_min","temp_max","coord","lat","lon"],"mappings":";;;AAEA,MAAMA,sBAAsB,GAAIC,KAAD,IAAW;AAEtC,WAASC,oBAAT,CAA8BC,MAA9B,EAAsC;AAClC,QAAIC,OAAO,GAAGD,MAAM,GAAE,MAAtB;AACA,WAAOE,IAAI,CAACC,KAAL,CAAWF,OAAX,CAAP;AACH;;AACD,QAAMG,UAAU,GAAIC,EAAD,IAAQ;AACvBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,EAAZ;AACAG,IAAAA,cAAc,CAACC,WAAW,CAACC,MAAZ,CAAoBC,YAAD,IAAkBA,YAAY,CAACN,EAAb,KAAoBA,EAAzD,CAAD,CAAd;AACH,GAHD;;AAIA,sBACI;AAAA,eACKP,KAAK,CAACc,KAAN,iBAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADpB,EAEKd,KAAK,CAACe,OAAN,iBAAiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFtB,EAGKf,KAAK,CAACW,WAAN,CAAkBK,GAAlB,KAA0B,GAA1B,gBACG;AAAK,MAAA,SAAS,EAAG,cAAjB;AAAA,8BACI;AAAQ,QAAA,OAAO,EAAI,MAAMV,UAAU,CAACN,KAAK,CAACO,EAAP,CAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAK,QAAA,SAAS,EAAG,uBAAjB;AAAA,gCACI;AAAA,qBAAKP,KAAK,CAACW,WAAN,CAAkBM,IAAvB,QAA+BjB,KAAK,CAACW,WAAN,CAAkBO,GAAlB,CAAsBC,OAArD;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAK,UAAA,SAAS,EAAG,gBAAjB;AAAA,kCACI;AAAG,YAAA,SAAS,EAAG,cAAf;AAAA,sBAA+BnB,KAAK,CAACW,WAAN,CAAkBS,OAAlB,CAA0B,CAA1B,EAA6BC;AAA5D;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAG,YAAA,SAAS,EAAG,kBAAf;AAAA,sBAAmCrB,KAAK,CAACW,WAAN,CAAkBS,OAAlB,CAA0B,CAA1B,EAA6BE;AAAhE;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAMI;AAAA,mCAAcrB,oBAAoB,CAACD,KAAK,CAACW,WAAN,CAAkBU,IAAlB,CAAuBE,QAAxB,CAAlC;AAAA;AAAA;AAAA;AAAA;AAAA,gBANJ,eAOI;AAAA,mCAActB,oBAAoB,CAACD,KAAK,CAACW,WAAN,CAAkBU,IAAlB,CAAuBG,QAAxB,CAAlC;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPJ,eAQI;AAAA,mCAAcxB,KAAK,CAACW,WAAN,CAAkBc,KAAlB,CAAwBC,GAAtC,QAA6C1B,KAAK,CAACW,WAAN,CAAkBc,KAAlB,CAAwBE,GAArE;AAAA;AAAA;AAAA;AAAA;AAAA,gBARJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADH,GAeC,IAlBN;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAsBH,CAhCD;;KAAM5B,sB;AAkCN,eAAeA,sBAAf","sourcesContent":["\n\nconst CityWeatherInformation = (props) => {\n    \n    function converterTemperature(valNum) {\n        let Celsius = valNum -273.15;\n        return Math.round(Celsius);\n    }\n    const deleteCard = (id) => {\n        console.log(id)\n        setWeatherInfo(weatherInfo.filter((cityForecast) => cityForecast.id !== id ));\n    }\n    return (\n        <div >\n            {props.error && <p >There is no such city in the world! Please enter a valid city.</p>}\n            {props.loading && <div>Loadoing...</div>}\n            {props.weatherInfo.cod === 200 ?           \n                <div className = 'city-element'> \n                    <button onClick = {() => deleteCard(props.id)}>X</button>\n                    <div className = 'information-container'>\n                        <h2>{props.weatherInfo.name}, {props.weatherInfo.sys.country}</h2>\n                        <div className = 'weather-inform'> \n                            <p className = 'weather-name'>{props.weatherInfo.weather[0].main}</p>\n                            <p className = 'weather-descript'>{props.weatherInfo.weather[0].description}</p>\n                        </div>\n                        <p>min temp: {converterTemperature(props.weatherInfo.main.temp_min)}</p>\n                        <p>max temp: {converterTemperature(props.weatherInfo.main.temp_max)}</p>\n                        <p>Location: {props.weatherInfo.coord.lat}, {props.weatherInfo.coord.lon}</p>\n                    </div>\n                    \n                </div>\n            : null} \n        </div>\n    )\n}\n    \nexport default CityWeatherInformation;"]},"metadata":{},"sourceType":"module"}