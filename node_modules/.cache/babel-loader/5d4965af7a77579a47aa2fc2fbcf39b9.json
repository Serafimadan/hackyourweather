{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/serafima/WWW/project/src/components/CityInfoList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport SearchForm from './SearchingForm';\nimport CityWeatherInformation from './CityWeatherInformation';\n\nconst CityInfoList = () => {\n  _s();\n\n  const [city, setCity] = useState('');\n  const fromStorage = JSON.parse(localStorage.getItem('weatherInfo'));\n  const [weatherInfo, setWeatherInfo] = useState(fromStorage ? fromStorage : []);\n  const [error, setError] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const API_KEY = process.env.REACT_APP_OPENWEATHERMAP_API_KEY; // save changes to local storage  \n\n  useEffect(() => {\n    localStorage.setItem('weatherInfo', JSON.stringify(weatherInfo));\n  }, [weatherInfo]);\n\n  function getWeatherInfo(e) {\n    e.preventDefault();\n\n    if (city.length === 0) {\n      return setError(true);\n    } // clear state in preparation for new data\n\n\n    setError(false);\n    setWeatherInfo([]);\n    setLoading(false);\n    fetch(`https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${API_KEY}`).then(response => response.json()).then(response => {\n      console.log(response);\n\n      if (response.cod !== 200) {\n        throw new Error();\n      }\n\n      console.log(response.id);\n      setWeatherInfo([...weatherInfo, response]);\n      setLoading(false); // clear input after press the button\n\n      setCity('');\n    }).catch(error => {\n      setError(true);\n      setLoading(false);\n      console.log(error.message);\n    });\n  } // delete weather card by id\n\n\n  const deleteCard = id => {\n    setWeatherInfo(weatherInfo.filter((cityWeatherForcast, index) => index !== id));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Weather\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(SearchForm, {\n      getWeatherInfo: getWeatherInfo,\n      setCity: setCity,\n      city: city\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"weather-list\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: error && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Please enter a valid city!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 28\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }, this), !error && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: weatherInfo.map((cityForcast, id) => /*#__PURE__*/_jsxDEV(CityWeatherInformation, {\n          id: cityForcast.id,\n          weatherInfo: cityForcast,\n          loading: loading,\n          index: id,\n          deleteCard: deleteCard\n        }, cityForcast.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CityInfoList, \"dNYzlFNtEttBI01hHE2vy+O8uIA=\");\n\n_c = CityInfoList;\nexport default CityInfoList;\n\nvar _c;\n\n$RefreshReg$(_c, \"CityInfoList\");","map":{"version":3,"sources":["/Users/serafima/WWW/project/src/components/CityInfoList.js"],"names":["React","useState","useEffect","SearchForm","CityWeatherInformation","CityInfoList","city","setCity","fromStorage","JSON","parse","localStorage","getItem","weatherInfo","setWeatherInfo","error","setError","loading","setLoading","API_KEY","process","env","REACT_APP_OPENWEATHERMAP_API_KEY","setItem","stringify","getWeatherInfo","e","preventDefault","length","fetch","then","response","json","console","log","cod","Error","id","catch","message","deleteCard","filter","cityWeatherForcast","index","map","cityForcast"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport SearchForm from './SearchingForm';\nimport CityWeatherInformation from './CityWeatherInformation';\n\n\nconst CityInfoList = () => {\n    const [city, setCity] = useState('');\n    const fromStorage = JSON.parse(localStorage.getItem('weatherInfo'));\n    const [weatherInfo, setWeatherInfo] = useState(fromStorage ? fromStorage : []);\n    const [error, setError] = useState(false);\n    const [loading, setLoading] = useState(false);\n    const API_KEY = process.env.REACT_APP_OPENWEATHERMAP_API_KEY;\n    // save changes to local storage  \n    useEffect(() => {\n        localStorage.setItem('weatherInfo', JSON.stringify(weatherInfo)\n        )\n    }, [weatherInfo]);\n    \n    function getWeatherInfo(e) {\n        e.preventDefault();\n        if (city.length === 0) {\n            return setError(true);\n        }\n        // clear state in preparation for new data\n        setError(false);\n        setWeatherInfo([]);\n        setLoading(false);\n        fetch(`https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${API_KEY}`)\n        .then(response => response.json())\n        .then(response => { console.log(response)\n            if (response.cod !== 200) {\n                throw new Error()\n            }\n            console.log(response.id);\n            setWeatherInfo([...weatherInfo, response]);\n            setLoading(false);\n            // clear input after press the button\n            setCity('');\n        })\n        .catch(error => {\n            setError(true);\n            setLoading(false);\n            console.log(error.message);\n        });\n    }\n    // delete weather card by id\n    const deleteCard = (id) => {\n        setWeatherInfo(weatherInfo.filter((cityWeatherForcast, index) => index !== id ));\n    }\n    \n    return (\n        <div className='container'>\n            <h1>Weather</h1>\n            <SearchForm getWeatherInfo = {getWeatherInfo} setCity = {setCity} city={city}/>\n            <div className = 'weather-list'>\n            \n            <div>{error && <p >Please enter a valid city!</p>}</div>\n            {!error && \n                    <div>{weatherInfo.map((cityForcast, id) => \n                        <CityWeatherInformation \n                            key={cityForcast.id} \n                            id={cityForcast.id}\n                            weatherInfo={cityForcast}\n                            loading={loading}\n                            index={id}\n                            deleteCard={deleteCard}    \n                        />) }    \n                        </div>\n            }\n            </div>\n        </div>\n    )\n}\nexport default CityInfoList;\n    "]},"metadata":{},"sourceType":"module"}