{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/serafima/WWW/React/week3/project/src/components/CityWeatherInformation.js\";\nimport React from 'react';\n\nconst CityWeatherInformation = props => {\n  const {\n    cityName,\n    countryName,\n    weatherMain,\n    weatherDescription,\n    minTemp,\n    maxTemp,\n    lon,\n    lat,\n    removeCity,\n    id,\n    icon\n  } = props;\n\n  function converterTemperature(valNum) {\n    let Celsius = valNum - 273.15;\n    return Math.round(Celsius);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [props.error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"There is no such city in the world! Please enter a valid city.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 29\n    }, this), props.loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loadoing...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 31\n    }, this), props.weatherInfo.cod === 200 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"city-element\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"information-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [props.weatherInfo.name, \", \", props.weatherInfo.sys.country]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"weather-inform\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"weather-name\",\n            children: props.weatherInfo.weather[0].main\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"weather-descript\",\n            children: props.weatherInfo.weather[0].description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"min temp: \", converterTemperature(props.weatherInfo.main.temp_min)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"max temp: \", converterTemperature(props.weatherInfo.main.temp_max)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Location: \", props.weatherInfo.coord.lat, \", \", props.weatherInfo.coord.lon]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 17\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n};\n\n_c = CityWeatherInformation;\nexport default CityWeatherInformation;\n\nvar _c;\n\n$RefreshReg$(_c, \"CityWeatherInformation\");","map":{"version":3,"sources":["/Users/serafima/WWW/React/week3/project/src/components/CityWeatherInformation.js"],"names":["React","CityWeatherInformation","props","cityName","countryName","weatherMain","weatherDescription","minTemp","maxTemp","lon","lat","removeCity","id","icon","converterTemperature","valNum","Celsius","Math","round","error","loading","weatherInfo","cod","name","sys","country","weather","main","description","temp_min","temp_max","coord"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,sBAAsB,GAAIC,KAAD,IAAW;AACtC,QAAM;AACFC,IAAAA,QADE;AAEFC,IAAAA,WAFE;AAGFC,IAAAA,WAHE;AAIFC,IAAAA,kBAJE;AAKFC,IAAAA,OALE;AAMFC,IAAAA,OANE;AAOFC,IAAAA,GAPE;AAQFC,IAAAA,GARE;AASFC,IAAAA,UATE;AAUFC,IAAAA,EAVE;AAWFC,IAAAA;AAXE,MAYFX,KAZJ;;AAaA,WAASY,oBAAT,CAA8BC,MAA9B,EAAsC;AAClC,QAAIC,OAAO,GAAGD,MAAM,GAAE,MAAtB;AACA,WAAOE,IAAI,CAACC,KAAL,CAAWF,OAAX,CAAP;AACH;;AACD,sBACI;AAAA,eACKd,KAAK,CAACiB,KAAN,iBAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADpB,EAEKjB,KAAK,CAACkB,OAAN,iBAAiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFtB,EAGKlB,KAAK,CAACmB,WAAN,CAAkBC,GAAlB,KAA0B,GAA1B,gBACG;AAAK,MAAA,SAAS,EAAG,cAAjB;AAAA,6BACI;AAAK,QAAA,SAAS,EAAG,uBAAjB;AAAA,gCACI;AAAA,qBAAKpB,KAAK,CAACmB,WAAN,CAAkBE,IAAvB,QAA+BrB,KAAK,CAACmB,WAAN,CAAkBG,GAAlB,CAAsBC,OAArD;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAK,UAAA,SAAS,EAAG,gBAAjB;AAAA,kCACI;AAAG,YAAA,SAAS,EAAG,cAAf;AAAA,sBAA+BvB,KAAK,CAACmB,WAAN,CAAkBK,OAAlB,CAA0B,CAA1B,EAA6BC;AAA5D;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAG,YAAA,SAAS,EAAG,kBAAf;AAAA,sBAAmCzB,KAAK,CAACmB,WAAN,CAAkBK,OAAlB,CAA0B,CAA1B,EAA6BE;AAAhE;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAMI;AAAA,mCAAcd,oBAAoB,CAACZ,KAAK,CAACmB,WAAN,CAAkBM,IAAlB,CAAuBE,QAAxB,CAAlC;AAAA;AAAA;AAAA;AAAA;AAAA,gBANJ,eAOI;AAAA,mCAAcf,oBAAoB,CAACZ,KAAK,CAACmB,WAAN,CAAkBM,IAAlB,CAAuBG,QAAxB,CAAlC;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPJ,eAQI;AAAA,mCAAc5B,KAAK,CAACmB,WAAN,CAAkBU,KAAlB,CAAwBrB,GAAtC,QAA6CR,KAAK,CAACmB,WAAN,CAAkBU,KAAlB,CAAwBtB,GAArE;AAAA;AAAA;AAAA;AAAA;AAAA,gBARJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADH,GAaC,IAhBN;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAoBH,CAtCD;;KAAMR,sB;AAwCN,eAAeA,sBAAf","sourcesContent":["import React from 'react';\n\nconst CityWeatherInformation = (props) => {\n    const {\n        cityName,\n        countryName,\n        weatherMain,\n        weatherDescription,\n        minTemp,\n        maxTemp,\n        lon,\n        lat,\n        removeCity,\n        id,\n        icon\n    } = props;\n    function converterTemperature(valNum) {\n        let Celsius = valNum -273.15;\n        return Math.round(Celsius);\n    }\n    return (\n        <div >\n            {props.error && <p >There is no such city in the world! Please enter a valid city.</p>}\n            {props.loading && <div>Loadoing...</div>}\n            {props.weatherInfo.cod === 200 ?           \n                <div className = 'city-element'> \n                    <div className = 'information-container'>\n                        <h2>{props.weatherInfo.name}, {props.weatherInfo.sys.country}</h2>\n                        <div className = 'weather-inform'> \n                            <p className = 'weather-name'>{props.weatherInfo.weather[0].main}</p>\n                            <p className = 'weather-descript'>{props.weatherInfo.weather[0].description}</p>\n                        </div>\n                        <p>min temp: {converterTemperature(props.weatherInfo.main.temp_min)}</p>\n                        <p>max temp: {converterTemperature(props.weatherInfo.main.temp_max)}</p>\n                        <p>Location: {props.weatherInfo.coord.lat}, {props.weatherInfo.coord.lon}</p>\n                    </div>\n                </div>\n            : null}\n        </div>\n    )\n}\n    \nexport default CityWeatherInformation;"]},"metadata":{},"sourceType":"module"}