{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/serafima/WWW/project/src/components/CityWeatherInformation.js\";\nimport React from 'react';\nimport { Link } from \"react-router-dom\";\n\nconst CityWeatherInformation = ({\n  weatherInfo,\n  deleteCard,\n  index,\n  loading,\n  id\n}) => {\n  const {\n    cod,\n    name,\n    sys,\n    weather,\n    main,\n    coord\n  } = weatherInfo;\n\n  function converterTemperature(valNum) {\n    let Celsius = valNum - 273.15;\n    return Math.round(Celsius);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loadoing...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 25\n    }, this), cod === 200 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: typeof weather[0].main !== \"undefined\" ? converterTemperature(main.temp) >= 15 ? \"city-element hot\" : \"city-element cold\" : \"city-element\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"removeButton\",\n        onClick: () => deleteCard(index),\n        children: \"X\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: `/${id}`,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"information-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: [name, \", \", sys.country]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"weather-inform\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"weather-name\",\n              children: weather[0].main\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"weather-descript\",\n              children: weather[0].description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"min temp: \", converterTemperature(main.temp_min), \" \\xB0C\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"max temp: \", converterTemperature(main.temp_max), \" \\xB0C\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Location: \", coord.lat, \", \", coord.lon]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 17\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }, this);\n};\n\n_c = CityWeatherInformation;\nexport default CityWeatherInformation;\n\nvar _c;\n\n$RefreshReg$(_c, \"CityWeatherInformation\");","map":{"version":3,"sources":["/Users/serafima/WWW/project/src/components/CityWeatherInformation.js"],"names":["React","Link","CityWeatherInformation","weatherInfo","deleteCard","index","loading","id","cod","name","sys","weather","main","coord","converterTemperature","valNum","Celsius","Math","round","temp","country","description","temp_min","temp_max","lat","lon"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,kBAArB;;AAGA,MAAMC,sBAAsB,GAAG,CAAC;AAACC,EAAAA,WAAD;AAAcC,EAAAA,UAAd;AAA0BC,EAAAA,KAA1B;AAAiCC,EAAAA,OAAjC;AAA0CC,EAAAA;AAA1C,CAAD,KAAmD;AAC9E,QAAM;AAACC,IAAAA,GAAD;AAAMC,IAAAA,IAAN;AAAYC,IAAAA,GAAZ;AAAiBC,IAAAA,OAAjB;AAA0BC,IAAAA,IAA1B;AAAgCC,IAAAA;AAAhC,MAA0CV,WAAhD;;AAEA,WAASW,oBAAT,CAA8BC,MAA9B,EAAsC;AAClC,QAAIC,OAAO,GAAGD,MAAM,GAAE,MAAtB;AACA,WAAOE,IAAI,CAACC,KAAL,CAAWF,OAAX,CAAP;AACH;;AACD,sBACI;AAAA,eACKV,OAAO,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADhB,EAEKE,GAAG,KAAK,GAAR,gBACG;AAAK,MAAA,SAAS,EACV,OAAOG,OAAO,CAAC,CAAD,CAAP,CAAWC,IAAlB,KAA2B,WAA3B,GACEE,oBAAoB,CAACF,IAAI,CAACO,IAAN,CAApB,IAAmC,EAAnC,GACI,kBADJ,GAEI,mBAHN,GAIE,cALN;AAAA,8BAOI;AAAQ,QAAA,SAAS,EAAG,cAApB;AAAmC,QAAA,OAAO,EAAI,MAAMf,UAAU,CAACC,KAAD,CAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPJ,eASI,QAAC,IAAD;AAAO,QAAA,EAAE,EAAG,IAAGE,EAAG,EAAlB;AAAA,+BACA;AAAK,UAAA,SAAS,EAAG,uBAAjB;AAAA,kCACI;AAAA,uBAAKE,IAAL,QAAaC,GAAG,CAACU,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAK,YAAA,SAAS,EAAG,gBAAjB;AAAA,oCACI;AAAG,cAAA,SAAS,EAAG,cAAf;AAAA,wBAA+BT,OAAO,CAAC,CAAD,CAAP,CAAWC;AAA1C;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAG,cAAA,SAAS,EAAG,kBAAf;AAAA,wBAAmCD,OAAO,CAAC,CAAD,CAAP,CAAWU;AAA9C;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAQI;AAAA,qCAAcP,oBAAoB,CAACF,IAAI,CAACU,QAAN,CAAlC;AAAA;AAAA;AAAA;AAAA;AAAA,kBARJ,eASI;AAAA,qCAAcR,oBAAoB,CAACF,IAAI,CAACW,QAAN,CAAlC;AAAA;AAAA;AAAA;AAAA;AAAA,kBATJ,eAUI;AAAA,qCAAcV,KAAK,CAACW,GAApB,QAA2BX,KAAK,CAACY,GAAjC;AAAA;AAAA;AAAA;AAAA;AAAA,kBAVJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,cATJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADH,GAyBC,IA3BN;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA+BH,CAtCD;;KAAMvB,sB;AAwCN,eAAeA,sBAAf","sourcesContent":["import React from 'react';\nimport { Link } from \"react-router-dom\";\n\n\nconst CityWeatherInformation = ({weatherInfo, deleteCard, index, loading, id}) => {\n    const {cod, name, sys, weather, main, coord } = weatherInfo;\n    \n    function converterTemperature(valNum) {\n        let Celsius = valNum -273.15;\n        return Math.round(Celsius);\n    }\n    return (\n        <div >\n            {loading && <div>Loadoing...</div>}\n            {cod === 200 ?           \n                <div className={\n                    typeof weather[0].main !== \"undefined\"\n                    ? converterTemperature(main.temp) >= 15\n                        ? \"city-element hot\"\n                        : \"city-element cold\"\n                    : \"city-element\"\n                }> \n                    <button className = 'removeButton' onClick = {() => deleteCard(index)}>X</button>\n                    {/* go to city card to look forcast chart */}\n                    <Link  to={`/${id}`}>\n                    <div className = 'information-container'>\n                        <h2>{name}, {sys.country}</h2>\n                        <div className = 'weather-inform'> \n                            <p className = 'weather-name'>{weather[0].main}</p>\n                            <p className = 'weather-descript'>{weather[0].description}</p>\n                            \n                        </div>\n                        \n                        <p>min temp: {converterTemperature(main.temp_min)} °C</p>\n                        <p>max temp: {converterTemperature(main.temp_max)} °C</p>\n                        <p>Location: {coord.lat}, {coord.lon}</p>\n                    </div>\n                    </Link>\n                </div>\n            : null} \n        </div>\n    )\n}\n    \nexport default CityWeatherInformation;"]},"metadata":{},"sourceType":"module"}